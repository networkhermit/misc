#!/bin/bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]... VENDOR

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit

Arguments:
    VENDOR (cloudflare | opendns | quad9)
        dns vendor name
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

: "${1?✗ argument parsing failed: missing argument ‘VENDOR’}"
case ${1} in
cloudflare | opendns | quad9)
    VENDOR=${1}
    ;;
*)
    die "✗ argument parsing failed: acceptable values for ‘VENDOR’ are cloudflare | opendns | quad9"
    ;;
esac
shift

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

case ${VENDOR} in
cloudflare)
    dig \
        1dot1dot1dot1.cloudflare-dns.com a 1dot1dot1dot1.cloudflare-dns.com aaaa \
        +short
    ;;
opendns)
    dig \
        resolver1.opendns.com a resolver1.opendns.com aaaa \
        resolver2.opendns.com a resolver2.opendns.com aaaa \
        resolver3.opendns.com a resolver3.opendns.com aaaa \
        resolver4.opendns.com a resolver4.opendns.com aaaa \
        +short
    ;;
*)
    dig \
        dns.quad9.net a dns.quad9.net aaaa \
        dns-nosec.quad9.net a dns-nosec.quad9.net aaaa \
        +short
    ;;
esac
