#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

trap 'echo ✗ fatal error: errexit trapped with status $? 1>&2' ERR

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        cat << EOF
Usage:
    ${0##*/} [OPTION]...

Optional arguments:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit
EOF
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

if (( $# > 0 )); then
    echo "✗ argument parsing failed: unrecognizable argument ‘${1}’" 1>&2
    exit 1
fi

echo '[ route ]'

ip route get 1.1.1.1 | awk '{ print $7; exit }'

echo '[ opendns ]'

(
dig myip.opendns.com @208.67.222.222 a +short
dig myip.opendns.com @208.67.220.220 a +short
) | uniq

#drill myip.opendns.com @208.67.222.222 a
#drill myip.opendns.com @208.67.220.220 a

#host -t a myip.opendns.com 208.67.222.222
#host -t a myip.opendns.com 208.67.220.220

echo '[ amazonaws ]'

curl --fail --location --silent --show-error 'https://checkip.amazonaws.com'

echo '[ google ]'

(
dig o-o.myaddr.l.google.com @216.239.32.10 txt +short
dig o-o.myaddr.l.google.com @216.239.34.10 txt +short
) | tr --delete \" | uniq

echo '[ ipv4 ]'

ip -4 address | awk '/\<inet\>/ { print $2 }' | sort --field-separator / --key 1,1V --key 2,2n

echo '[ ipv6 ]'

ip -6 address | awk '/\<inet6\>/ { print $2 }' | sort
