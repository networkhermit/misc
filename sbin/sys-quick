#!/bin/bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

if (( EUID != 0 )); then
    die '✗ This script must be run as root'
fi

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]... ALIAS

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit

Arguments:
    ALIAS (netstat | iptables | ip6tables | ss)
        diagnostic launcher name
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

: "${1?✗ argument parsing failed: missing argument ‘ALIAS’}"
case ${1} in
netstat | iptables | ip6tables | ss)
    ALIAS=${1}
    ;;
*)
    die "✗ argument parsing failed: acceptable values for ‘ALIAS’ are netstat | iptables | ip6tables | ss"
    ;;
esac
shift

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

separator=----------------------------------------------------------------

case ${ALIAS} in
netstat)
    netstat --tcp --udp --raw --listening --numeric --programs
    ;;
iptables)
    iptables --table filter --list --numeric --verbose --line-numbers
    printf '\n%s\n\n' "${separator}"
    iptables --table nat --list --numeric --verbose --line-numbers
    ;;
ip6tables)
    ip6tables --table filter --list --numeric --verbose --line-numbers
    printf '\n%s\n\n' "${separator}"
    ip6tables --table nat --list --numeric --verbose --line-numbers
    ;;
*)
    ss --tcp --udp --raw --listening --numeric --processes
    ;;
esac
