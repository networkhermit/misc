#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]...

Options:
    --root-commit
        force root commit (default: false)
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit
EOF
}

ROOT_COMMIT=false

while (( $# > 0 )); do
    case ${1} in
    --root-commit)
        ROOT_COMMIT=true
        shift
        ;;
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    git gc --aggressive --prune
    if [[ "${ROOT_COMMIT}" = true ]]; then
        git push --force --set-upstream origin main
    else
        git push --set-upstream origin main
    fi
}

trap clean_up EXIT

if [[ "${ROOT_COMMIT}" = true ]]; then
    url=$(git remote get-url origin)
    rm --force --recursive .git
    git init
    git remote add origin "${url}"
    git add --all
fi

GIT_AUTHOR_DATE=$(date --utc --iso-8601=s) GIT_COMMITTER_DATE=$(date --utc --iso-8601=s) TZ=UTC git commit --message 'This is where it all begins...'
