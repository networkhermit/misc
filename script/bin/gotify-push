#!/bin/bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]...

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit
EOF
}

# shellcheck source=/dev/null
source "$(git -C "$(dirname "$(realpath "${0}")")" rev-parse --show-toplevel)/config/vault/gotify.cfg"

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

TEXT=
while IFS= read -r LINE; do
    TEXT+=${LINE}
    TEXT+=$'\n'
done

TEXT=$(python3 -c 'import json, sys; print(json.dumps(sys.stdin.read()))' <<< "${TEXT}")

curl --fail --location --silent --show-error --request POST \
    --header 'Content-Type: application/json' \
    --data '{"message": '"${TEXT}"', "priority": 5, "title": "notice"}' \
    "${END_POINT}/message?token=${APP_TOKEN}"
