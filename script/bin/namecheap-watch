#!/bin/bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]...

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit
EOF
}

# shellcheck source=/dev/null
source "$(git -C "$(dirname "$(realpath "${0}")")" rev-parse --show-toplevel)/.privacy/namecheap.cfg"

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

sleep 15

CURRENCY_RATE=$(curl --fail --location --silent --show-error --request GET "https://free.currconv.com/api/v7/convert?q=USD_CNY&compact=ultra&apiKey=${CURRENCY_CONVERTER_API_KEY}" | awk --field-separator '[{:}]' '{ print $3 }')
PUBLIC_IP_ADDRESS=$(dig myip.opendns.com @208.67.222.222 a +short)
REQUEST_API_METHOD=namecheap.users.getPricing

if [ -z "${CURRENCY_RATE}" ]; then
    die '✗ unexpected error: cannot acquire the currency rate'
fi

if [ -z "${PUBLIC_IP_ADDRESS}" ]; then
    die '✗ unexpected error: cannot resolve the public ip address'
fi

for i in ${WATCH_LIST}; do
    sleep 1

    xmllint --xpath '//*[local-name()="Price"]/@*[name()="YourPrice"]' \
        <(
        curl --fail --location --silent --show-error --request GET \
            --get \
            --data ApiKey="${API_KEY}" \
            --data ApiUser="${API_USER}" \
            --data ClientIp="${PUBLIC_IP_ADDRESS}" \
            --data UserName="${USER_NAME}" \
            --data Command=${REQUEST_API_METHOD} \
            --data ActionName=RENEW \
            --data ProductName="${i}" \
            --data ProductType=DOMAIN \
            https://api.namecheap.com/xml.response
        ) \
        | xargs --max-args 1 --no-run-if-empty \
        | awk --assign suffix="${i}" --assign rate="${CURRENCY_RATE}" --field-separator = 'BEGIN { printf suffix }; { printf ",%.2f", $2 * rate }; END { printf "\n" }'
done \
    | column --separator , --table --table-columns "$(echo SUFFIX {1..10} | tr ' ' ,)" --table-right "$(echo {1..10} | tr ' ' ,)"
