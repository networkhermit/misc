#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]... PROGRAM ARGUMENT...

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit

Arguments:
    PROGRAM
        program name
    ARGUMENT
        optional arguments
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

PROGRAM=${1?✗ argument parsing failed: missing argument ‘PROGRAM’}
shift

clean_up () {
    true
}

trap clean_up EXIT

if [[ ! -x "$(command -v "${PROGRAM}")" ]]; then
    die "✗ command not found: ‘${PROGRAM}’"
fi

proxy=http://127.0.0.1:6666

export http_proxy=${proxy}
export https_proxy=${proxy}
export no_proxy=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

"${PROGRAM}" "${@}"
