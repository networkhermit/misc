#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "âœ— [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]... FILE...

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit

Arguments:
    FILE
        markdown file to be analyzed
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

clean_up () {
    true
}

trap clean_up EXIT

for i in "$@"; do
    awk '
    BEGIN {
        matched = 0
    }

    {
        if ($0 ~ "^```bash$") {
            matched = 1
        } else if ($0 ~ "^```$") {
            matched = 0
        } else if (matched) {
            print $0
        }
    }
    ' "${i}" \
        | shellcheck -
done
