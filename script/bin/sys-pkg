#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]...

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

if [[ "${OSTYPE}" != linux-gnu ]] && [[ "${OSTYPE}" != linux ]]; then
    die "✗ unknown os type: ‘${OSTYPE}’"
fi

# shellcheck source=/dev/null
source <(grep '^ID=' /etc/os-release)
DISTRO=${ID:-linux}

case ${DISTRO} in
arch|archarm)
    pacman --query --info \
        | awk '/^Name/ { name=$3 } /^Version/ { version=$3 } /^Architecture/ { architecture=$3 } /^Installed Size/ { printf "%-14s %s-%s-%s\n", $4$5, name, version, architecture }' \
        | sort --human-numeric-sort --reverse
    ;;
fedora)
    rpm --query --all --queryformat '%-14{SIZE:humaniec} %{NAME}-%{VERSION}.%{ARCH}\n'
    ;;
kali)
    dpkg-query --show --showformat '${Installed-Size} ${Package}_${Version}_${Architecture}\n' \
        | numfmt --field 1 --format '%-14.2f' --from none --from-unit 1024 --to iec-i \
        | sort --human-numeric-sort --reverse
    ;;
*)
    die "✗ unknown distro: ‘${DISTRO}’"
    ;;
esac
