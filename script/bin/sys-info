#!/bin/bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]... MANIFEST

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit

Arguments:
    MANIFEST (distro | group | user)
        manifest name
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

: "${1?✗ argument parsing failed: missing argument ‘MANIFEST’}"
case ${1} in
distro | group | user)
    MANIFEST=${1}
    ;;
*)
    die "✗ argument parsing failed: acceptable values for ‘MANIFEST’ are distro | group | user"
    ;;
esac
shift

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

case ${MANIFEST} in
distro)
    # shellcheck source=/dev/null
    source <(grep '^ID=' /etc/os-release)
    DISTRO=${ID:-linux}
    echo "${DISTRO}"
    ;;
group)
    sort \
        --field-separator : \
        --key 3,3n \
        --stable \
        /etc/group \
        | cut \
        --complement \
        --delimiter : \
        --field 2 \
        | column \
        --separator : \
        --table \
        --table-columns GROUP_NAME,GID,USER_LIST
    ;;
*)
    sort \
        --field-separator : \
        --key 3,3n \
        --stable \
        /etc/passwd \
        | cut \
        --complement \
        --delimiter : \
        --field 2 \
        | column \
        --separator : \
        --table \
        --table-columns LOGIN_NAME,UID,GID,COMMENT,HOME,SHELL
    ;;
esac
