#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

warn () {
    if (( $# > 0 )); then
        echo "${@}" 1>&2
    fi
}

die () {
    warn "${@}"
    exit 1
}

notify () {
    local code=$?
    warn "✗ [FATAL] $(caller): ${BASH_COMMAND} (${code})"
}

trap notify ERR

display_help () {
    cat << EOF
Synopsis:
    ${0##*/} [OPTION]...

Options:
    -h, --help
        show this help message and exit
    -v, --version
        output version information and exit
EOF
}

while (( $# > 0 )); do
    case ${1} in
    -h | --help)
        display_help
        shift
        exit
        ;;
    -v | --version)
        echo v0.1.0
        shift
        exit
        ;;
    --)
        shift
        break
        ;;
    *)
        break
        ;;
    esac
done

if (( $# > 0 )); then
    die "✗ argument parsing failed: unrecognizable argument ‘${1}’"
fi

clean_up () {
    true
}

trap clean_up EXIT

echo [ route ]

ip route get 1.1.1.1 | awk '{ print $7; exit }'

echo [ opendns ]

{
    drill -Q myip.opendns.com @208.67.222.222 a
    drill -Q myip.opendns.com @208.67.220.220 a
} | uniq

echo [ amazonaws ]

curl --fail --location --silent --show-error https://checkip.amazonaws.com

echo [ google ]

{
    drill -Q o-o.myaddr.l.google.com @216.239.32.10 txt
    drill -Q o-o.myaddr.l.google.com @216.239.34.10 txt
} | tr --delete \" | uniq

echo [ ipv4 ]

ip -4 address | awk '/\<inet\>/ { print $2 }' | sort --field-separator / --key 1,1V --key 2,2n

echo [ ipv6 ]

ip -6 address | awk '/\<inet6\>/ { print $2 }' | sort
